{"version":3,"file":"static/js/357.4b13e248.chunk.js","mappings":"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","sources":["webpack://app/./src/comp/header.module.css?b077","comp/header.tsx","webpack://app/./src/comp/universal.module.css?4cd4","../node_modules/js-cookie/dist/js.cookie.mjs","pages/tasks.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_header__c7ymF\",\"letter\":\"header_letter__McXFI\"};","import React from \"react\";\r\nimport styles from './header.module.css';\r\n\r\ninterface HeaderProps {\r\n    text: string;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({text}) => {\r\n    const renderLetters = (text: string) => {\r\n        return text.split('').map((char, index) => (\r\n            <div key={index} className={styles.letter}>\r\n                {char}\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div className={styles.header}>\r\n            {renderLetters(text)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// extracted by mini-css-extract-plugin\nexport default {\"area\":\"universal_area__HaOFu\",\"component\":\"universal_component__tI8YS\",\"invis\":\"universal_invis__l8qyx\",\"hasBackground\":\"universal_hasBackground__vLyDq\",\"button\":\"universal_button__Dxv6a\",\"bar\":\"universal_bar__0aS7X\",\"flexCenter\":\"universal_flexCenter__UrfGM\"};","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import React, { useEffect } from \"react\";\r\nimport Header from \"../comp/header\";\r\nimport \"./tasks.css\";\r\nimport styles from \"../comp/universal.module.css\"\r\nimport Cookies from \"js-cookie\";\r\n\r\ninterface Task {\r\n    id: number;\r\n    title: string;\r\n    date: string;\r\n    description: string;\r\n    deadline: string;\r\n    isEditing: boolean;\r\n    isComplete: boolean;\r\n}\r\n\r\nconst Tasks: React.FC = () => {\r\n    const [tasks, setTasks] = React.useState<Task[]>([]);\r\n\r\n    useEffect(() => {\r\n        const savedTasks = loadTasks();\r\n        setTasks(savedTasks)\r\n    }, []);\r\n\r\n\r\n    const addTask = (newTask: Task) => {\r\n        const updatedTasks = [...tasks, newTask];\r\n        setTasks(updatedTasks);\r\n        saveTasks(updatedTasks);\r\n    };\r\n\r\n    const saveTask = (id: number, updatedTask: Partial<{ title: string; date: string; description: string; deadline: string; }>) => {\r\n        setTasks((prevTasks) => {\r\n            const updatedTasks = prevTasks.map((task) =>\r\n                task.id === id ? { ...task, ...updatedTask, isEditing: false } : task\r\n            );\r\n            saveTasks(updatedTasks);\r\n            return updatedTasks;\r\n        });\r\n    };\r\n\r\n    const handleDelete = (id: number) => {\r\n        setTasks((prevTasks) => prevTasks.filter((task) => task.id !== id));\r\n    };\r\n\r\n    const handleChecked = (id: number, updatedTask: Partial<{ title: string; date: string; description: string; deadline: string; }>) => {        \r\n        setTasks((prevTasks) => {\r\n            const updatedTasks = prevTasks.map((task) =>\r\n                task.id === id ? { ...task, ...updatedTask, isEditing: false, isComplete: !task.isComplete  } : task\r\n            );\r\n            saveTasks(updatedTasks);\r\n            return updatedTasks;\r\n        });\r\n    }\r\n\r\n    const handleTouchStart = (e: React.TouchEvent | React.MouseEvent, id: number, isTouch: boolean) => {\r\n        const currentTask = tasks.find((task) => task.id === id);\r\n        if (currentTask?.isEditing) return;\r\n        const startX = isTouch\r\n        ? (e as React.TouchEvent).touches[0].clientX\r\n        : (e as React.MouseEvent).clientX;\r\n\r\n        const handleTouchMove = (moveEvent: TouchEvent | MouseEvent) => {\r\n            const moveX = \"touches\" in moveEvent \r\n                ? moveEvent.touches[0]?.clientX ?? startX\r\n                : (moveEvent as MouseEvent).clientX;\r\n\r\n            const swipeDistance = startX - moveX;\r\n\r\n            const taskElement = document.getElementById(`task-${id}`);\r\n            if (taskElement) {\r\n                taskElement.style.transform = `translateX(${-swipeDistance}px)`;\r\n            }\r\n        };\r\n\r\n        const handleTouchEnd = (endEvent: TouchEvent | MouseEvent) => {\r\n            const endX = \"changedTouches\" in endEvent\r\n            ? endEvent.changedTouches[0]?.clientX ?? startX\r\n            : (endEvent as MouseEvent).clientX;\r\n\r\n            const swipeDistance = startX - endX;\r\n\r\n            const taskElement = document.getElementById(`task-${id}`);\r\n            if (taskElement) {\r\n                if (swipeDistance > 100) {\r\n                    taskElement.style.transform = `transform 0.15s none`;\r\n                    taskElement.style.transform = `translateX(-100%)`;\r\n                    setTimeout(() => handleDelete(id), 300);\r\n                } else if(swipeDistance < 0) {\r\n                    taskElement.style.transform = `transform 0.15s none`;\r\n                    taskElement.style.transform = `translateX(0)`;\r\n                    if (currentTask) {\r\n                        const { id, title, date, description, deadline } = currentTask;\r\n                        handleChecked(id, { title, date, description, deadline });\r\n                    }\r\n                }\r\n                else {\r\n                    taskElement.style.transform = `transform 0.15s none`;\r\n                    taskElement.style.transform = `translateX(0)`;\r\n                }\r\n            }\r\n\r\n            document.removeEventListener(isTouch ? \"touchmove\" : \"mousemove\", handleTouchMove);\r\n            document.removeEventListener(isTouch ? \"touchend\" : \"mouseup\", handleTouchEnd);\r\n        };\r\n\r\n        document.addEventListener(isTouch ? \"touchmove\" : \"mousemove\", handleTouchMove);\r\n        document.addEventListener(isTouch ? \"touchend\" : \"mouseup\", handleTouchEnd);\r\n    };\r\n\r\n    const sortTasks = (key: keyof Task, order: \"asc\" | \"desc\") => {\r\n        const sortedTasks = [...tasks].sort((a,b) => {\r\n            if (a[key] < b[key]) return order === \"asc\" ? -1 : 1;\r\n            if (a[key] > b[key]) return order === \"asc\" ? 1 : -1;\r\n            return 0;\r\n        })\r\n\r\n        setTasks(sortedTasks);\r\n        saveTasks(sortedTasks);\r\n    };\r\n\r\n    const today = new Date();\r\n    const todayStr = today.toISOString().split(\"T\")[0];\r\n    const endOfYear = new Date(today.getFullYear(), 11, 31);\r\n    const endOfYearStr = endOfYear.toISOString().split(\"T\")[0];\r\n\r\n    return (\r\n        <div>\r\n            <Header text='tasks'/>\r\n            <div className={styles.hasBackground} id=\"thisContainer\">\r\n                <div className={styles.area} id=\"taskArea\">\r\n                    <div className={`taskSort`}>\r\n                        <button onClick={() => sortTasks(\"deadline\", \"asc\")} className={`sortButton`}>deadline</button>\r\n                        <p className={styles.flexCenter} style={{fontSize: \"10px\"}}>sort</p>\r\n                        <button onClick={() => sortTasks(\"date\", \"asc\")} className={`sortButton`}>created</button>\r\n                    </div>\r\n\r\n                    {tasks.map((task) => (\r\n                        <div \r\n                            key={`task-${task.id}-${task.isComplete}`}\r\n                            id={`task-${task.id}`}\r\n                            style={{ backgroundColor: task.isComplete ? \"rgba(79, 136, 77, 0.3)\" : \"none\" }}\r\n                            className={`${styles.component} taskComponent`}\r\n                            onTouchStart={(e) => handleTouchStart(e, task.id, true)}\r\n                            onMouseDown={(e) => handleTouchStart(e, task.id, false)}\r\n                        >\r\n                            {task.isEditing ? (\r\n                                <>\r\n                                    <div className=\"task\">\r\n                                        <div className=\"taskHeader\">\r\n                                            <div className=\"taskDate\" id=\"taskDate\">{task.date}</div>\r\n                                            <input\r\n                                                className={`${\"taskName\"}`}\r\n                                                id=\"taskName\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"enter title\"\r\n                                                maxLength={20}\r\n                                                defaultValue={task.title}\r\n                                                onChange={(e) => (task.title = e.target.value)}    \r\n                                            />\r\n                                            <input\r\n                                                className={`${\"taskDeadline\"}`}\r\n                                                id=\"taskDeadline\"\r\n                                                type=\"date\"\r\n                                                min={todayStr}\r\n                                                max={endOfYearStr}\r\n                                                defaultValue={task.deadline}\r\n                                                onChange={(e) => (task.deadline = e.target.value)}    \r\n                                            />\r\n                                        </div>\r\n                                        <textarea\r\n                                                className={`${\"taskDescription\"}`}\r\n                                                id=\"taskDescription\"\r\n                                                placeholder=\"enter description\"\r\n                                                defaultValue={task.description}\r\n                                                onChange={(e) => (task.description = e.target.value)}    \r\n                                            />\r\n                                    </div>\r\n                                    <button className={`${\"taskButton\"} ${styles.button}`} onClick={() => {\r\n                                        saveTask(task.id, {\r\n                                            title: task.title,\r\n                                            description: task.description,\r\n                                            deadline: task.deadline,\r\n                                        });\r\n                                    }} id=\"taskSave\">\r\n                                        <svg width=\"16\" height=\"16\" fill=\"floralwhite\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M12 2h-2v3h2z\"/>\r\n                                            <path d=\"M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <svg width=\"32\" height=\"32\" fill=\"rgba(34, 85, 33, 0.8)\" viewBox=\"0 0 16 16\" style={{display: task.isComplete ? \"block\" : \"none\", marginRight:\"6px\"}}>\r\n                                      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\"/>\r\n                                      <path d=\"m10.97 4.97-.02.022-3.473 4.425-2.093-2.094a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05\"/>\r\n                                    </svg>\r\n                                    <div className=\"task\">\r\n                                        <div className=\"taskHeader\">\r\n                                            <div className=\"taskDate\">{task.date.slice(5)}</div>\r\n                                            <div className=\"taskName\">{task.title}</div>\r\n                                            <div className=\"taskDeadline\">{task.deadline.slice(5)}</div>\r\n                                        </div>\r\n                                        <div className=\"taskDescription\">{task.description}</div>\r\n                                    </div>\r\n                                    <button className={`${\"taskButton\"} ${styles.button}`} onClick={() => {\r\n                                        setTasks((prevTasks) => prevTasks.map((t) => (\r\n                                            t.id === task.id ? { ...t, isEditing: true } : t\r\n                                        )))\r\n                                    }}>\r\n                                        <svg width=\"16\" height=\"16\" fill=\"floralwhite\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <button className={styles.button} id=\"taskCreate\" onClick={() => \r\n                    addTask({\r\n                        id: Date.now(),\r\n                        title: \"\",\r\n                        date: new Date().toISOString().split('T')[0],\r\n                        description: \"\",\r\n                        deadline: new Date().toISOString().split('T')[0],\r\n                        isEditing: true,\r\n                        isComplete: false,\r\n                    })\r\n                }>\r\n                    <svg width=\"32\" height=\"32\" fill=\"floralwhite\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4\"/>\r\n                    </svg>\r\n                </button>\r\n\r\n            </div>\r\n            <p id=\"notice\">tasks get saved for 30 days</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst saveTasks = (tasks: Task[]) => {\r\n    Cookies.set(\"tasks\", JSON.stringify(tasks), { expires: 30 });\r\n}\r\n\r\nconst loadTasks = (): Task[] => {\r\n    const tasks = Cookies.get(\"tasks\");\r\n    return tasks ? JSON.parse(tasks) : [];\r\n}\r\n\r\nexport default Tasks;"],"names":["_ref","text","_jsx","className","styles","children","split","map","char","index","renderLetters","assign","target","i","arguments","length","source","key","api","init","converter","defaultAttributes","set","name","value","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","cookie","write","Object","create","get","cookies","jar","parts","slice","join","found","read","e","remove","withAttributes","this","withConverter","freeze","path","saveTasks","tasks","Cookies","JSON","stringify","loadTasks","parse","Tasks","setTasks","React","useEffect","savedTasks","handleTouchStart","id","isTouch","currentTask","find","task","isEditing","startX","touches","clientX","handleTouchMove","moveEvent","_moveEvent$touches$0$","_moveEvent$touches$","moveX","swipeDistance","taskElement","getElementById","concat","style","transform","handleTouchEnd","endEvent","_endEvent$changedTouc","_endEvent$changedTouc2","endX","changedTouches","setTimeout","prevTasks","filter","handleDelete","title","date","description","deadline","handleChecked","updatedTask","updatedTasks","_objectSpread","isComplete","removeEventListener","addEventListener","sortTasks","order","sortedTasks","sort","a","b","today","todayStr","toISOString","endOfYearStr","getFullYear","_jsxs","Header","onClick","fontSize","backgroundColor","onTouchStart","onMouseDown","_Fragment","type","placeholder","maxLength","defaultValue","onChange","min","max","saveTask","width","height","fill","viewBox","d","display","marginRight","t","newTask","addTask"],"sourceRoot":""}